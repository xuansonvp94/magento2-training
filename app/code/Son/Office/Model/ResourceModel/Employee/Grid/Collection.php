<?php

namespace Son\Office\Model\ResourceModel\Employee\Grid;

use Magento\Framework\Api\Search\SearchResultInterface;
use Magento\Framework\Api\SearchResultsInterface;
use Magento\Framework\Api\SearchCriteriaInterface;
use Son\Office\Model\ResourceModel\Employee\Collection as EmployeeCollection;

class Collection extends EmployeeCollection implements SearchResultInterface
{
    public function __construct(
        \Magento\Framework\Data\Collection\EntityFactory $entityFactory,
        \Psr\Log\LoggerInterface $logger,
        \Magento\Framework\Data\Collection\Db\FetchStrategyInterface $fetchStrategy,
        \Magento\Framework\Event\ManagerInterface $eventManager,
        \Magento\Eav\Model\Config $eavConfig,
        \Magento\Framework\App\ResourceConnection $resource,
        \Magento\Eav\Model\EntityFactory $eavEntityFactory,
        \Magento\Eav\Model\ResourceModel\Helper $resourceHelper,
        \Magento\Framework\Validator\UniversalFactory $universalFactory,
        $mainTable,
        $eventPrefix,
        $eventObjecy,
        $resourceModel,
        $model = 'Magento\Framework\View\Element\Ui\Component\DataProvider\Document',
        \Magento\Framework\DB\Adapter\AdapterInterface $connection = null)
    {
        parent::__construct(
            $entityFactory,
            $logger,
            $fetchStrategy,
            $eventManager,
            $eavConfig,
            $resource,
            $eavEntityFactory,
            $resourceHelper,
            $universalFactory,
            $connection
        );
    }

    public function getAggregations()
    {
        return $this->aggregations;
    }

    public function setAggregations($aggregations)
    {
        $this->aggregations = $aggregations;
    }

    public function getAllIds($limit = null, $offset = null)
    {
        return parent::getAllIds($limit, $offset); // TODO: Change the autogenerated stub
    }

    public function getItems()
    {

    }

    public function setSearchCriteria(SearchCriteriaInterface $searchCriteria)
    {

    }

    public function getTotalCount()
    {

    }

    public function setTotalCount($totalCount)
    {

    }

    public function setItems(array $items = null)
    {

    }



    public function getSearchCriteria()
    {

    }

}